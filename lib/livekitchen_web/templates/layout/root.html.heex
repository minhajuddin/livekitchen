<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8"/>
    <meta http-equiv="X-UA-Compatible" content="IE=edge"/>
    <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
    <%= csrf_meta_tag() %>
    <%= live_title_tag assigns[:page_title] || "Livekitchen", suffix: " Â· Phoenix Framework" %>
    <link phx-track-static rel="stylesheet" href={Routes.static_path(@conn, "/assets/app.css")}/>
    <script defer phx-track-static type="text/javascript" src={Routes.static_path(@conn, "/assets/app.js")}></script>
  </head>
  <body>
    <header>
      <section class="container">
        <nav>
          <ul>
            <li><a href="/pixelizer">Image Pixelizer</a></li>
            <%= if function_exported?(Routes, :live_dashboard_path, 2) do %>
              <li><%= link "LiveDashboard", to: Routes.live_dashboard_path(@conn, :home) %></li>
            <% end %>
          </ul>
        </nav>
        <a href="https://phoenixframework.org/" class="phx-logo">
          <img src={Routes.static_path(@conn, "/images/phoenix.png")} alt="Phoenix Framework Logo"/>
        </a>
      </section>
      <section class="container">
        <%= form_tag Routes.place_path(@conn, :create), method: :post, id: "set-pixel-form" do %>
        <input type="text" name="author" style="display: inline-block;width: 100px;" placeholder="player"/>
        <select name="x">
          <%= for x <- 0..99 do  %>
          <option><%= x %></option>
          <% end %>
        </select>
        <select name="y">
          <%= for y <- 0..99 do  %>
          <option><%= y %></option>
          <% end %>
        </select>
        <select name="color">
          <%= for color <- ~w[red blue yellow orange black white] do  %>
          <option><%= color %></option>
          <% end %>
        </select>
        <input type="submit" value="Set Pixel"/>
        <% end %>
      </section>
    </header>
    <%= @inner_content %>

    <script charset="utf-8">
      let setPixelForm = document.querySelector("#set-pixel-form");
      setPixelForm.addEventListener("submit", (e) => {
        e.preventDefault();
        let formData = new FormData(setPixelForm);
        let x = formData.get("x");
        let y = formData.get("y");
        let author = formData.get("author");
        let color = formData.get("color");
        console.log(`Setting pixel at ${x}, ${y} to ${color}`);

      fetch("/api/pixel", {
        method: "POST",
        headers: {
          "content-type": "application/json"
        },
        body: JSON.stringify({x: x, y: y, color: color, author: author})
      })
      .then(response => response.json())
      .then(data => console.log("RESPONSE", data));

      });
    </script>
  </body>
</html>
